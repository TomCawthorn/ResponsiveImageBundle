services:
  responsive_image.file_system:
      class: ResponsiveImageBundle\Utils\FileSystem
      arguments: ['%kernel.root_dir%', '%responsive_image%' ]

  responsive_image.style_manager:
      class: ResponsiveImageBundle\Utils\StyleManager
      arguments: ['@responsive_image.file_system', '%responsive_image%' ]

  responsive_image.imager:
      class: ResponsiveImageBundle\Utils\Imager
      arguments: [ '@responsive_image.file_system', '%responsive_image%' ]

  responsive_image.responsive_image_manager:
        class: ResponsiveImageBundle\Utils\ResponsiveImageManager
        arguments: [ '@responsive_image.imager', '@responsive_image.style_manager', '%responsive_image%', '@responsive_image.file_system', '@event_dispatcher' ]

  responsive_image.file_to_object:
      class: ResponsiveImageBundle\Utils\FileToObject
      arguments: [ '@doctrine.orm.entity_manager' ]

  responsive_image.uploader:
      class: ResponsiveImageBundle\Utils\Uploader
      arguments: ['@responsive_image.file_system']

  # Custom form field type.
  responsive_image.form.type.crop_focus:
      class: ResponsiveImageBundle\Form\Type\CropFocusType
      arguments: [ '@responsive_image.style_manager', '%responsive_image%' ]
      tags:
          - { name: form.type }

  # Form handlers.
  responsive_image.styles_form_handler:
      class: ResponsiveImageBundle\Form\Handler\StylesFormHandler
      arguments: [ '@responsive_image.style_manager' ]

  # Event listeners.
  responsive_image.listener.image_generated:
      class: ResponsiveImageBundle\Event\ImageListener
      arguments: [ '%responsive_image', '@responsive_image.responsive_image_manager' ]
      tags:
          - { name: kernel.event_listener, event: responsive_image.generated, method: onImageGenerated }

  responsive_image.listener.image_created:
      class: ResponsiveImageBundle\Event\ImageListener
      arguments: [ '%responsive_image', '@responsive_image.responsive_image_manager' ]
      tags:
          - { name: kernel.event_listener, event: responsive_image.created, method: onImageCreated }

  responsive_image.listener.image_update:
      class: ResponsiveImageBundle\Event\ImageListener
      arguments: [ '%responsive_image', '@responsive_image.responsive_image_manager' ]
      tags:
          - { name: kernel.event_listener, event: responsive_image.updated, method: onImageUpdated }